Create a class MyCalculator which consists of a single method power(int, int). This method takes two
integers, and , as parameters and finds . If either or is negative, then the method must throw an
exception which says "n and p should be non-negative".
Please read the partially completed code in the editor and complete it. Your class mustn't be public.
No need to worry about constraints, there won't be any overflow if your code is correct.
Input Format
Each line of the input contains two integers, and .
Constraints
n
Output Format
Each line of the output contains the result , if neither of and is negative. Otherwise the output
contains "n and p should be non-negative".
Sample Input 0
3 5
2 4
0 0
-1 -2
-1 3
Sample Output 0
243
16
java.lang.Exception: n and p should not be zero.
java.lang.Exception: n or p should not be negative.
java.lang.Exception: n or p should not be negative.
import java.util.Scanner;
import java.lang.Math;
class MyCalculator {
    /*
    * Create the method long power(int, int) here.
    */
    long power(int n,int p)throws Exception
    {
        if((n<0)||(p<0))
        {
            throw new Exception("n or p should not be negative.");
        }
    
    else if((n==0)&&(p==0))
    {
        throw new Exception("n and p should not be zero.");
    }
    return ((long)Math.pow(n,p));
    }
    
    }


public class Solution {
    public static final MyCalculator my_calculator = new MyCalculator();
    public static final Scanner in = new Scanner(System.in);
    
    public static void main(String[] args) {
        while (in .hasNextInt()) {
            int n = in .nextInt();
            int p = in .nextInt();
            
            try {
                System.out.println(my_calculator.power(n, p));
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
}
